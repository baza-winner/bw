// +build trace

// Code generated by "stringer -type=primaryState,secondaryState,itemType"; DO NOT EDIT.
package val

import "strconv"

const _primaryState_name = "beginexpectSpaceOrQwItemOrDelimiterexpectSpaceOrMapKeyexpectEndOfQwItemexpectContentOfexpectWordexpectEscapedContentOfexpectRocketexpectDigitend"

var _primaryState_index = [...]uint8{0, 5, 35, 54, 71, 86, 96, 118, 130, 141, 144}

func (i primaryState) String() string {
	if i >= primaryState(len(_primaryState_index)-1) {
		return "primaryState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _primaryState_name[_primaryState_index[i]:_primaryState_index[i+1]]
}

const _secondaryState_name = "noneorArrayItemSeparatororMapKeySeparatororMapValueSeparatororUnderscoreOrDotorUnderscore"

var _secondaryState_index = [...]uint8{0, 4, 24, 41, 60, 77, 89}

func (i secondaryState) String() string {
	if i >= secondaryState(len(_secondaryState_index)-1) {
		return "secondaryState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _secondaryState_name[_secondaryState_index[i]:_secondaryState_index[i+1]]
}

const _itemType_name = "itemStringitemQwitemQwItemitemNumberitemWorditemKeyitemMapitemArray"

var _itemType_index = [...]uint8{0, 10, 16, 26, 36, 44, 51, 58, 67}

func (i itemType) String() string {
	if i >= itemType(len(_itemType_index)-1) {
		return "itemType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _itemType_name[_itemType_index[i]:_itemType_index[i+1]]
}
